odroidgoa-uboot-config
echo "begin logocho.ini"

#     Logo Size:
#     L1+(btn)    = Big Logo
#     L2+(btn)    = Small Logo
#     L1+L2+(btn) = No Logo (just color fill)

#     Color:
#     U         =   White
#     D         =   Black
#     R         =   Orange
#     L         =   Purple
#     X(north)  =   Blue
#     A(east)   =   Red
#     B(south)  =   Yellow
#     Y(west)   =   Green
#     Select    =   Lake Blue
#     Start     =   Red Alt

# # # # # # # # # # # # # # # # # # # #
#  _________________________________  #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |_________________________________| #
#                                     #
#       White              Blue       #
#         ▲                (X)        #
# Purple◄   ►Orange Green(Y) (A) Red  #
#         ▼                (B)        #
#       Black             Yellow      #
#        _                  _         #
#      /   \              /   \       #
#     |     |  (-)  (+)  |     |      #
#      \ _ /  Lake  Alt   \ _ /       #
#             Blue  Red               #
# # # # # # # # # # # # # # # # # # # #

# Functions
setenv LogoChanged false
setenv EnvSave "saveenv; setenv LogoChanged true"

# Init vars but dont save until a panel is chosen
if env exist LogoChoInitialized
then
    echo "LogoCho Previously initialized..."
else
    setenv LogoSize Big
    setenv LogoColor Black
    setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}/logo.bmp"
    setenv LogoPathSlash "Logos/${LogoSize}/${LogoColor}/"
    setenv LogoPath "Logos/${LogoSize}/${LogoColor}"
    setenv LogoSettingIsPermanent false
    setenv LogoChoInitialized true
    setenv LogoChanged true
    run EnvSave
fi

#Show logo faster
mw.b 0x3df2c000 0 0x1000
echo "Loading logo"
if load mmc 1:1 0x3df2c000 "${LogoFilePath}"
then
    echo "Showing logo"
    show_bmp 0x3df2c000
    #LogoSleep
    sleep 1
else
    echo "logo load fail"
fi

# gpio ref
# U         = b12
# R         = b15
# D         = b13
# L         = b14
# X(north)  = b7
# A(east)   = b2
# B(south)  = b5
# Y(west)   = b6
# R1        = c7
# R2        = d15
# L1        = c6
# L2        = d10
# Start     = d12
# Select    = d9
# Vol+      = c0
# Vol-      = c1


if ${LogoSettingIsPermanent}
then
    # if pressing L1...
    if gpio input c6
    then
        # ...and pressing L2...
        if gpio input d10
        then
            # ...and pressing Vol +
            if gpio input c0
            then
                # Enable Logo Chooser
                setenv LogoSettingIsPermanent false
                run EnvSave
            fi
        fi
    fi
else
    # if pressing L1...
    if gpio input c6
    then
        # ...and pressing L2...
        if gpio input d10
        then
            # ...and pressing Vol -
            if gpio input c1
            then
                # Disable Logo Chooser
                setenv LogoSettingIsPermanent true
                run EnvSave
            fi
        fi
    fi
fi


# Re-init decision-making var
setenv RunLogoCho false

if ${LogoSettingIsPermanent}
then
    echo "Panel Setting Is Permanent... skipping LogoCho"
    setenv RunLogoCho false
else
    # if pressing L1...
    if gpio input c6
    then
        echo "Big Logo"
        setenv LogoSize Big
        setenv RunLogoCho true
    fi

    # if pressing L2...
    if gpio input d10
    then
        echo "Small Logo"
        setenv LogoSize Small
        setenv RunLogoCho true
    fi

    # if pressing L1...
    if gpio input c6
    then
        # ...and pressing L2...
        if gpio input d10
        then
            # Set No Logo
            echo "Blank Logo"
            setenv LogoSize Blank
            setenv RunLogoCho true
        fi
    fi
fi


if ${RunLogoCho}
then
    if gpio input b12
    then
        # Up White
        setenv LogoColor White
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}/logo.bmp"
        setenv LogoPathSlash "Logos/${LogoSize}/${LogoColor}/"
        setenv LogoPath "Logos/${LogoSize}/${LogoColor}"
        run EnvSave
        #sleep 3
        #poweroff

    elif gpio input b15
    then
        # Right Orange
        setenv LogoColor Orange
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}/logo.bmp"
        setenv LogoPathSlash "Logos/${LogoSize}/${LogoColor}/"
        setenv LogoPath "Logos/${LogoSize}/${LogoColor}"
        run EnvSave
        #sleep 3
        #poweroff

    elif gpio input b13
    then
        # Down Black
        setenv LogoColor Black
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}/logo.bmp"
        setenv LogoPathSlash "Logos/${LogoSize}/${LogoColor}/"
        setenv LogoPath "Logos/${LogoSize}/${LogoColor}"
        run EnvSave
        #sleep 3
        #poweroff

    elif gpio input b14
    then
        # Left Purple
        setenv LogoColor Purple
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}/logo.bmp"
        setenv LogoPathSlash "Logos/${LogoSize}/${LogoColor}/"
        setenv LogoPath "Logos/${LogoSize}/${LogoColor}"
        run EnvSave
        #sleep 3
        #poweroff

    elif gpio input b7
    then
        # X Blue
        setenv LogoColor Blue
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}/logo.bmp"
        setenv LogoPathSlash "Logos/${LogoSize}/${LogoColor}/"
        setenv LogoPath "Logos/${LogoSize}/${LogoColor}"
        run EnvSave
        #sleep 3
        #poweroff

    elif gpio input b2
    then
        # A Red
        setenv LogoColor Red
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}/logo.bmp"
        setenv LogoPathSlash "Logos/${LogoSize}/${LogoColor}/"
        setenv LogoPath "Logos/${LogoSize}/${LogoColor}"
        run EnvSave
        #sleep 3
        #poweroff

    elif gpio input b5
    then
        # B Yellow
        setenv LogoColor Yellow
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}/logo.bmp"
        setenv LogoPathSlash "Logos/${LogoSize}/${LogoColor}/"
        setenv LogoPath "Logos/${LogoSize}/${LogoColor}"
        run EnvSave
        #sleep 3
        #poweroff

    elif gpio input b6
    then
        # Y Green
        setenv LogoColor Green
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}/logo.bmp"
        setenv LogoPathSlash "Logos/${LogoSize}/${LogoColor}/"
        setenv LogoPath "Logos/${LogoSize}/${LogoColor}"
        run EnvSave
        #sleep 3
        #poweroff

    elif gpio input d9
    then
        # Select Lake Blue
        setenv LogoColor LakeBlue
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}/logo.bmp"
        setenv LogoPathSlash "Logos/${LogoSize}/${LogoColor}/"
        setenv LogoPath "Logos/${LogoSize}/${LogoColor}"
        run EnvSave
        #sleep 3
        #poweroff

    elif gpio input d12
    then
        # Start Red Alt
        setenv LogoColor RedAlt
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}/logo.bmp"
        setenv LogoPathSlash "Logos/${LogoSize}/${LogoColor}/"
        setenv LogoPath "Logos/${LogoSize}/${LogoColor}"
        run EnvSave
        #sleep 3
        #poweroff

    else
        echo "no button, no set"
    fi
fi


# gpio ref
# U         = b12
# R         = b15
# D         = b13
# L         = b14
# X(north)  = b7
# A(east)   = b2
# B(south)  = b5
# Y(west)   = b6
# R1        = c7
# R2        = d15
# L1        = c6
# L2        = d10
# Start     = d12
# Select    = d9
# Vol+      = c0
# Vol-      = c1


echo "LogoFilePath is ${LogoFilePath}"
echo "LogoPath is ${LogoPath}"
echo "LogoPathSlash is ${LogoPathSlash}"

if ${LogoChanged}
then
    mw.b 0x3df2c000 0 0x1000
    echo "Loading logo"
    if load mmc 1:1 0x3df2c000 "${LogoFilePath}"
    then
        echo "Showing logo"
        show_bmp 0x3df2c000
    else
        echo "logo load fail"
    fi
fi
echo "end logocho.ini"