odroidgoa-uboot-config

#     Logo Size:
#     L1+<btn>    = Big Logo
#     L2+<btn>    = Small Logo
#     L1+L2+<btn> = No Logo (just color fill)

#     Color:
#     U         =   White
#     D         =   Black
#     R         =   Orange
#     L         =   Purple
#     X(north)  =   Blue
#     A(east)   =   Red
#     B(south)  =   Yellow
#     Y(west)   =   Green
#     Select    =   Lake Blue
#     Start     =   Alt Red

# # # # # # # # # # # # # # # # # # # #
#  _________________________________  #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |_________________________________| #
#                                     #
#         1                5          #
#         ▲               (X)         #
#     4 ◄   ► 2   Custom(Y) (A)Orig   #
#         ▼               (B)         #
#         3              RGB20S       #
#         _                _          #
#       /   \            /   \        #
#      |     |          |     |       #
#       \ _ /            \ _ /        #
#                                     #
# # # # # # # # # # # # # # # # # # # #

# Functions
setenv EnvSave "saveenv"

# Init vars but dont save until a panel is chosen
if env exist LogoChoInitialized
then
    echo LogoCho Previously initialized...
else
    setenv LogoSize Big
    setenv LogoColor Black
    setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}.bmp"
    setenv LogoSettingIsPermanent false
    setenv LogoChoInitialized true
fi

# Re-init decision-making var
setenv RunLogoCho false
# gpio ref
# U         = b12
# R         = b15
# D         = b13
# L         = b14
# X(north)  = b7
# A(east)   = b2
# B(south)  = b5
# Y(west)   = b6
# R1        = c7
# R2        = d15
# L1        = c6
# L2        = d10
# Start     = d12
# Select    = d9
# Vol+      = c0
# Vol-      = c1

if ${LogoSettingIsPermanent}
then
    # if pressing L1...
    if gpio input c6
    then
        # ...and pressing L2...
        if gpio input d10
        then
            # ...and pressing Vol +
            if gpio input c0
            then
                # Disable Logo Chooser
                setenv LogoSettingIsPermanent false
                run EnvSave
            fi
        fi
    fi
else
    # if pressing L1...
    if gpio input c6
    then
        # ...and pressing L2...
        if gpio input d10
        then
            # ...and pressing Vol -
            if gpio input c1
            then
                # Disable Logo Chooser
                setenv LogoSettingIsPermanent true
                run EnvSave
            fi
        fi
    fi
fi

if ${LogoSettingIsPermanent}
then
    echo "Panel Setting Is Permanent... skipping LogoCho"
else
    # if pressing L1...
    if gpio input c6
    then
        setenv LogoSize Big
    fi
    # if pressing L2...
    if gpio input d10
    then
        setenv LogoSize Small
    fi
    # if pressing L1...
    if gpio input c6
    then
        # ...and pressing L2...
        if gpio input d10
        then
            # Set No Logo
            setenv LogoSize Blank
        fi
    fi
fi

#     Logo Size:
#     L1+<btn>    = Big Logo
#     L2+<btn>    = Small Logo
#     L1+L2+<btn> = No Logo (just color fill)

#     Color:
#     U         =   White
#     D         =   Black
#     R         =   Orange
#     L         =   Purple
#     X(north)  =   Blue
#     A(east)   =   Red
#     B(south)  =   Yellow
#     Y(west)   =   Green
#     Select    =   Lake Blue
#     Start     =   Red Alt

if ${RunLogoCho}
then
    if gpio input b12
    then
        # Up White
        setenv LogoColor White
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}.bmp"
        run EnvSave
        sleep 3
        poweroff

    elif gpio input b15
    then
        # Right Orange
        setenv LogoColor Orange
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}.bmp"
        run EnvSave
        sleep 3
        poweroff

    elif gpio input b13
    then
        # Down Black
        setenv LogoColor Black
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}.bmp"
        run EnvSave
        sleep 3
        poweroff

    elif gpio input b14
    then
        # Left Purple
        setenv LogoColor Purple
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}.bmp"
        run EnvSave
        sleep 3
        poweroff

    elif gpio input b7
    then
        # X Blue
        setenv LogoColor Blue
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}.bmp"
        run EnvSave
        sleep 3
        poweroff

    elif gpio input b2
    then
        # A Red
        setenv LogoColor Red
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}.bmp"
        run EnvSave
        sleep 3
        poweroff

    elif gpio input b5
    then
        # B Yellow
        setenv LogoColor Yellow
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}.bmp"
        run EnvSave
        sleep 3
        poweroff

    elif gpio input b6
    then
        # Y Green
        setenv LogoColor Green
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}.bmp"
        run EnvSave
        sleep 3
        poweroff
    elif gpio input b6
    then
        # Select Lake Blue
        setenv LogoColor LakeBlue
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}.bmp"
        run EnvSave
        sleep 3
        poweroff
    elif gpio input b6
    then
        # Start Red Alt
        setenv LogoColor RedAlt
        setenv LogoFilePath "Logos/${LogoSize}/${LogoColor}.bmp"
        run EnvSave
        sleep 3
        poweroff

    else
        echo "no button, no set"
    fi
fi

mw.b 0x3df2c000 0 0x1000
if load mmc 1:1 0x3df2c000 ${LogoFilePath}
then
    show_bmp 0x3df2c000
fi